{"version":3,"sources":["redux/reducers/contacts.js","redux/reducers/index.js","redux/type/index.js","redux/reducers/errors.js","redux/reducers/loaders.js","redux/store/index.js","redux/action/contacts.js","redux/action/loaders.js","redux/action/actionContacts.js","Components/AddContactForm/AddContactForm.js","redux/action/errors.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["initialState","rootReducer","combineReducers","contacts","state","action","type","payload","filter","contact","id","filterState","errors","loaders","middleware","thunk","compose","composeWithDevTools","applyMiddleware","globalState","createStore","deleteContact","createAction","name","number","uuidv4","loadSuccess","addContact","option","headers","AddContactForm","useState","form","setForm","dispatch","useDispatch","useSelector","console","log","inputValue","e","target","value","onSubmit","preventDefault","isExist","find","el","toast","configure","error","a","axios","post","result","data","asyncAddContact","className","onChange","connect","useEffect","get","then","res","catch","finally","filteredArr","toLowerCase","includes","length","TransitionGroup","component","map","CSSTransition","classNames","timeout","key","onClick","delete","responce","Filter","onInput","App","book","in","this","enter","Component","ReactDOM","render","StrictMode","store","globalStore","document","getElementById"],"mappings":"iUAEMA,EAAe,GCcNC,EAVKC,0BAAgB,CAEhCC,SDJoB,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACzD,OAAQA,EAAOC,MACZ,IEN4B,oBFOxB,OAAOD,EAAOE,QAClB,IEPuB,cFQnB,MAAM,GAAN,mBAAYH,GAAZ,CAAmBC,EAAOE,UAC9B,IER0B,iBFStB,OAAOH,EAAMI,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,EAAOE,WACxD,QACI,OAAOH,ICJZO,YDQuB,WAAwB,IAAvBP,EAAsB,uDAAf,GAAIC,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IEhBc,SFiBd,OAAQD,EAAOE,QACf,QACI,OAAOH,ICZfQ,OEFW,WAAoC,IAAnCR,EAAkC,iGAAVE,EAAU,EAAVA,KACpC,OAAQA,GACJ,IDAiC,4BCCjC,IDAoC,+BCChC,OAAO,EACX,IDDmB,cCEf,OAAO,EACX,QACI,OAAOF,IFLfS,QGFW,WAAqC,IAAnCT,EAAkC,iGAAVE,EAAU,EAAVA,KACrC,OAAQA,GACJ,IFNiC,4BEOjC,IFLoC,+BEMhC,OAAO,EACX,IFRmC,8BESnC,IFPsC,iCEQlC,OAAO,EACX,QACI,OAAOF,MCTbU,EAAa,C,MAACC,GAEdC,EAAUC,8BAAoBC,kBAAe,WAAf,EAAmBJ,IAcxCK,EAZKC,sBAAYnB,EAAae,G,wFCWhCK,GADYC,YAAa,eAAe,YAAkC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAAU,MAAO,CAACjB,QAAS,CAACG,GAAIe,cAAUF,OAAMC,cAChGF,YAAa,mBAC7Bd,EAASc,YAAa,U,0CCItBI,EAAc,iBAAO,CAC9BpB,KLdgC,yBMEvBqB,EAAa,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAA2B,CACnDlB,KNlByB,cMmBzBC,QAAS,CAAEG,GAFa,EAAiBA,GAE1Ba,OAAMC,YAajBI,EAAS,CACbC,QAAS,CACP,eAAgB,qBCmCLC,EA5DQ,WAErB,IAAM9B,EAAe,CAACuB,KAAM,GAAIC,OAAQ,IAFb,EAIHO,mBAAS/B,GAJN,mBAIpBgC,EAJoB,KAIdC,EAJc,KAKrBC,EAAWC,cACXhC,EAAWiC,aAAY,SAAChC,GAAD,OAAWA,EAAMD,YAE9CkC,QAAQC,IAAInC,GAEZ,IAAMoC,EAAa,SAACC,GAAO,IAAD,EACAA,EAAEC,OAAlBlB,EADgB,EAChBA,KAAMmB,EADU,EACVA,MACdT,EAAQ,eAAID,EAAL,eAAYT,EAAOmB,MA0B5B,OACE,0BAAMC,SAxBW,SAACH,GAClBA,EAAEI,iBACF,IAAMC,EAAU1C,EAAS2C,MACvB,SAACC,GAAD,OAAQA,EAAGxB,OAASS,EAAKT,QAE3B,MAAkB,KAAdS,EAAKT,MAA+B,KAAhBS,EAAKR,QAC3BwB,IAAMC,iBAEND,IAAME,MAAM,kBAGVL,GACFG,IAAMC,YACND,IAAME,MAAN,UAAelB,EAAKT,KAApB,gCAEAU,EAAQjC,KAGRkC,EDIyB,SAAC,GAAD,IAAEX,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,8CAAqB,WAClDU,GADkD,iBAAAiB,EAAA,6DAGhDjB,EDzCkC,CAClC5B,KLLqC,8BM8C/BG,EAAU,CAACc,OAAMC,SAAQd,GAAIe,eAJa,SAM5CS,EE3CyB,CAC7B5B,KRCuB,gBMmCyB,SAOvB8C,IAAMC,KAAK,iCAAkC5C,EAASmB,GAP/B,OAOtC0B,EAPsC,OAQ5CpB,EAASP,EAAW2B,EAAOC,OARiB,kDAUzCrB,EEvDwB,CAC/B5B,KROqC,8BMqCW,yBAWvC4B,ED7C2B,CACpC5B,KLRuC,gCMyCS,6EAArB,sDCJhBkD,CAAgBxB,SACzBC,EAAQjC,KAKkByD,UAAU,SACpC,uBAAGA,UAAU,SAAb,QACA,2BAAOnD,KAAK,OAAOoD,SAAUnB,EAAYG,MAAOV,EAAKT,KAAMA,KAAK,SAChE,uBAAGkC,UAAU,SAAb,gBACA,2BACEnD,KAAK,OACLoD,SAAUnB,EACVG,MAAOV,EAAKR,OACZD,KAAK,WAEP,4BAAQjB,KAAK,UAAb,e,gBEgBSqD,eANS,SAACvD,GAAD,MAAY,CAClCD,SAAUC,EAAMD,YAKHwD,EApEK,WAElB,IAAMzB,EAAWC,cAEjByB,qBAAU,WACR1B,GH2BiC,SAACA,GAClCA,EDf4B,CAC5B5B,KLX8B,uBM0B9B8C,IAAMS,IAAI,kCACTC,MAAK,SAACC,GAAD,OAAS7B,EA7BoB,CACnC5B,KNd4B,oBMe5BC,QA2BqCwD,EAAIR,UACxCS,OAAM,SAACd,GAAD,OAAWhB,EE7BS,CAC3B5B,KRDsB,kBM8BrB2D,QAAQ/B,EAASR,SG/Bb,IAEP,IAAMvB,EAAWiC,aAAY,SAAChC,GAAD,OAAWA,EAAMD,YACxCK,EAAS4B,aAAY,SAAChC,GAAD,OAAWA,EAAMO,eAGtCuD,EAAc,WAClB,OAAO/D,EAASK,QAAO,SAAAuC,GAAE,OAAIA,EAAGxB,KAAK4C,cAAcC,SAAS5D,OAW9D,OAJF6B,QAAQC,IAAI9B,GACZ6B,QAAQC,IAAInC,GAIR,oCACGA,EAASkE,OAAS,EACjB,kBAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKd,UAAU,QACvCS,IAAcM,KAAI,SAACzB,GAAD,OACjB,kBAAC0B,EAAA,EAAD,CAAeC,WAAW,WAAWC,QAAS,IAAKC,IAAK7B,EAAGrC,IAC3D,wBAAK+C,UAAU,YACf,yBAAKA,UAAU,YAAYV,EAAGxB,MAD9B,IAC0C,yBAAKkC,UAAU,YAAYV,EAAGvB,QACtE,4BAAQqD,QAAS,kBAAM3C,GHuBFxB,EGvB8BqC,EAAGrC,GHuB1B,SAACwB,GACvCA,ED9C8B,CAC9B5B,KLXwC,iCMyDxC8C,IACC0B,OADD,yCAC0CpE,IACzCoD,MAAK,SAACiB,GAAD,OAAc7C,EA3CK,SAACxB,GAAD,MAAS,CACpCJ,KNtB4B,iBMuB5BC,QAASG,GAyCsBW,CAAcX,OAC1CsD,OAAM,SAACd,GAAD,OAAWhB,EE7DY,CAC9B5B,KRIwC,oCMyDvC2D,SAAQ,kBAAM/B,ED/CgB,CAC/B5B,KLd0C,yCMsDZ,IAACI,GGvBuC+C,UAAU,YAAtE,WAMN,kBAACa,EAAA,EAAD,CAAiBC,UAAU,KAAKd,UAAU,QACvCS,IAAcM,KAAI,SAACzB,GAAD,OACjB,kBAAC0B,EAAA,EAAD,CAAeC,WAAW,WAAWC,QAAS,KAC9C,wBAAIC,IAAK7B,EAAGrC,GAAI+C,UAAU,YACxB,yBAAKA,UAAU,YAAYV,EAAGxB,MADhC,IAC4C,yBAAKkC,UAAU,YAAYV,EAAGvB,QACxE,4BAAQqD,QAAS,kBAAM3C,EAASb,EAAc0B,EAAGrC,MAAM+C,UAAU,YAAjE,eClBCuB,EA3BA,WAGb,IAAM9C,EAAWC,cAQjB,OACE,yBAAKsB,UAAU,SACb,uBAAGA,UAAU,SAAb,yBACA,2BACEnD,KAAK,OACL2E,QAXa,SAACzC,GAGlBN,EAAS1B,EAAOgC,EAAEC,OAAOC,SASrBnB,KAAK,aCZP2D,G,kNACJ9E,MAAQ,CACN+E,MAAM,G,uDAON,OACE,yBAAK1B,UAAU,WACb,kBAACgB,EAAA,EAAD,CACEW,GAAIC,KAAKjF,MAAM+E,KACfT,WAAW,YACXC,QAAS,CAAEW,MAAO,MAElB,wBAAI7B,UAAU,aAAd,cAGF,kBAAC,EAAD,MACA,wBAAIA,UAAU,aAAd,gBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAtBU8B,cAoCH5B,eANS,SAACvD,GAAD,MAAY,CAClCD,SAAUC,EAAMD,YAKHwD,CAA0BuB,GCtCzCM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOC,GACjB,kBAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.8d39d83d.chunk.js","sourcesContent":["import { ADD_CONTACT, DELETE_CONTACT, FILTER, TAKE_FROM_STORAGE} from '../type/index';\r\n\r\nconst initialState = []\r\n\r\nexport const contacts = (state = initialState, action) => {\r\n switch (action.type) {\r\n    case TAKE_FROM_STORAGE:\r\n        return action.payload\r\n    case ADD_CONTACT:\r\n        return [... state, action.payload];\r\n    case DELETE_CONTACT:\r\n        return state.filter(contact => contact.id !== action.payload);\r\n     default:\r\n         return state;\r\n }\r\n}\r\n\r\nexport const filterState = (state =\"\", action ) =>{\r\n    switch (action.type) {\r\n        case FILTER:\r\n        return  action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//____with toolkits\r\n\r\n// import {createReducer} from '@reduxjs/toolkit'\r\n// import {addContact, deleteContact, filter} from '../action/contacts'\r\n\r\n// const initialState = [\r\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ]\r\n\r\n// export const contacts = createReducer(initialState, {\r\n//     [addContact]: (state, action) => {\r\n//         state.push(action.payload)\r\n//     },\r\n//     [deleteContact]: (state, action) => \r\n//         state.filter(contact => contact.id !== action.payload)\r\n    \r\n// })\r\n\r\n// export const filterState = createReducer('', {\r\n//     [filter]: (state, action) => (\r\n//        state = action.payload\r\n//     )\r\n// })\r\n\r\n","import {combineReducers} from 'redux';\r\nimport filter from './filters';\r\nimport {contacts, filterState} from './contacts'\r\nimport loaders from './loaders';\r\nimport errors from './errors'\r\n\r\nconst rootReducer = combineReducers({\r\n    \r\n    contacts: contacts,\r\n    filterState: filterState,\r\n    errors,\r\n    loaders\r\n})\r\n\r\n\r\n\r\nexport default rootReducer\r\n","export const TAKE_FROM_STORAGE ='TAKE_FROM_STORAGE';\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const FILTER = 'FILTER';\r\n\r\nexport const ADD_CONTACT_REQUEST_START = \"ADD_CONTACT_REQUEST_START\";\r\nexport const ADD_CONTACT_REQUEST_SUCCESS = 'ADD_CONTACT_REQUEST_SUCCESS';\r\nexport const DELETE_CONTACT_REQUEST_START = 'DELETE_CONTACT_REQUEST_START';\r\nexport const DELETE_CONTACT_REQUEST_SUCCESS = 'DELETE_CONTACT_REQUEST_SUCCESS';\r\n\r\nexport const ADD_CONTACT_REQUEST_ERROR = 'ADD_CONTACT_REQUEST_ERROR';\r\nexport const DELETE_CONTACT_REQUEST_ERROR = 'DELETE_CONTACT_REQUEST_ERROR';\r\nexport const ERROR_RESET = 'ERROR_RESET';\r\n\r\nexport const LOAD_ERROR = \"LOAD_ERROR\";\r\nexport const LOAD_REQUEST_START = \"LOAD_REQUEST_START\";\r\nexport const LOAD_REQUEST_SUCCESS = \"LOAD_REQUEST_SUCCESS\"","import {\r\n  ADD_CONTACT_REQUEST_ERROR,\r\n  DELETE_CONTACT_REQUEST_ERROR,\r\n  ERROR_RESET\r\n} from \"../type/index\";\r\n\r\nconst initiateState = false;\r\n\r\nexport default (state = initiateState, {type}) => {\r\n    switch (type) {\r\n        case ADD_CONTACT_REQUEST_ERROR:\r\n        case DELETE_CONTACT_REQUEST_ERROR:\r\n            return true;  \r\n        case ERROR_RESET:\r\n            return false\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  ADD_CONTACT_REQUEST_START,\r\n  ADD_CONTACT_REQUEST_SUCCESS,\r\n  DELETE_CONTACT_REQUEST_START,\r\n  DELETE_CONTACT_REQUEST_SUCCESS,\r\n} from \"../type/index\";\r\n\r\nconst initiateState = false;\r\n\r\nexport default ( state = initiateState, {type}) => {\r\n    switch (type) {\r\n        case ADD_CONTACT_REQUEST_START:\r\n        case DELETE_CONTACT_REQUEST_START:\r\n            return true;\r\n        case ADD_CONTACT_REQUEST_SUCCESS:\r\n        case DELETE_CONTACT_REQUEST_SUCCESS:\r\n            return false;    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport {devToolsEnhancer, composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from '../reducers/index'\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport {filterState, contacts} from '../reducers/contacts'\r\nimport thunk from 'redux-thunk'\r\n\r\n// const globalState = createStore(rootReducer, devToolsEnhancer());\r\n\r\nconst middleware = [thunk]\r\n\r\nconst compose = composeWithDevTools(applyMiddleware(...middleware))\r\n\r\nconst globalState = createStore(rootReducer, compose)\r\n\r\n// const rootReducer = {\r\n//     filterState,\r\n//     contacts\r\n// }\r\n\r\n// const globalState = configureStore({\r\n//     reducer: rootReducer,\r\n//     devTools: process.env.NODE_ENV !== \"production\"\r\n// })\r\n\r\nexport default globalState","import {ADD_CONTACT, DELETE_CONTACT, FILTER} from '../type/index';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {createAction} from '@reduxjs/toolkit'\r\n\r\n\r\n\r\n// export const addContact = ({name, number}) => ({\r\n//     type: ADD_CONTACT,\r\n//     payload: {id: uuidv4(), name, number}\r\n// })\r\n\r\n// export const deleteContact =(id) => ({\r\n//     type: DELETE_CONTACT,\r\n//     payload: id\r\n// })\r\n\r\n// export const filter = (value) => ({\r\n//     type: FILTER,\r\n//     payload: value\r\n// })\r\n\r\n//____with toolkits\r\n\r\nexport const addContact =createAction(\"ADD_CONTACT\", function prepare({name, number}) {return {payload: {id: uuidv4(), name, number}}})\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\")\r\nexport const filter = createAction(\"FILTER\")","import {\r\n  ADD_CONTACT_REQUEST_START,\r\n  ADD_CONTACT_REQUEST_SUCCESS,\r\n  DELETE_CONTACT_REQUEST_START,\r\n  DELETE_CONTACT_REQUEST_SUCCESS,\r\n  LOAD_REQUEST_START,\r\n  LOAD_REQUEST_SUCCESS\r\n} from \"../type/index\";\r\n\r\nexport const addContactStart = () => ({\r\n    type: ADD_CONTACT_REQUEST_START,\r\n});\r\n\r\nexport const addContactSuccess = () => ({\r\n    type: ADD_CONTACT_REQUEST_SUCCESS,\r\n});\r\n\r\nexport const deleteStart = () => ({\r\n    type: DELETE_CONTACT_REQUEST_START,\r\n});\r\n\r\nexport const deleteSuccess =() => ({\r\n    type: DELETE_CONTACT_REQUEST_SUCCESS\r\n})\r\n\r\nexport const loadStart = () => ({\r\n    type: LOAD_REQUEST_START\r\n})\r\n\r\nexport const loadSuccess = () => ({\r\n    type: LOAD_REQUEST_SUCCESS\r\n})\r\n","import { ADD_CONTACT, DELETE_CONTACT, FILTER, TAKE_FROM_STORAGE } from \"../type/index\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { contactError, deleteError, errorReset, loadError } from \"./errors\";\r\nimport {\r\n  addContactStart,\r\n  addContactSuccess,\r\n  deleteStart,\r\n  deleteSuccess,\r\n  loadStart,\r\n  loadSuccess\r\n} from \"./loaders\";\r\n\r\nexport const loadContacts = (data) => ({\r\n    type: TAKE_FROM_STORAGE,\r\n    payload: data\r\n})\r\n\r\nexport const addContact = ({ name, number, id }) => ({\r\n  type: ADD_CONTACT,\r\n  payload: { id, name, number },\r\n});\r\n\r\nexport const deleteContact = (id) => ({\r\n  type: DELETE_CONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const filter = (value) => ({\r\n  type: FILTER,\r\n  payload: value,\r\n});\r\n\r\nconst option = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const asyncLoadStorage =() => (dispatch) => {\r\n    dispatch(loadStart())\r\n    axios.get(\"http://localhost:5001/contacts\")\r\n    .then((res) => dispatch(loadContacts(res.data)))\r\n    .catch((error) => dispatch(loadError()))\r\n    .finally(dispatch(loadSuccess))\r\n}\r\n\r\nexport const asyncAddContact = ({name, number }) => async (\r\n  dispatch\r\n) => {\r\n    dispatch(addContactStart())\r\n    const contact = {name, number, id: uuidv4()}\r\n    try {\r\n        dispatch(errorReset())\r\n        const result = await axios.post(\"http://localhost:5001/contacts\", contact, option);\r\n        dispatch(addContact(result.data))\r\n    }\r\n    catch {dispatch(contactError())}\r\n    finally {dispatch(addContactSuccess())}\r\n};\r\n\r\n\r\nexport const asyncDeleteContact = (id) => (dispatch) => {\r\n    dispatch(deleteStart());\r\n    axios\r\n    .delete(`http://localhost:5001/contacts/${id}`)\r\n    .then((responce) => dispatch(deleteContact(id)))\r\n    .catch((error) => dispatch(deleteError()))\r\n    .finally(() => dispatch(deleteSuccess()))\r\n}","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {toast} from 'react-toastify';\nimport { v4 as uuidv4 } from \"uuid\";\nimport {addContact} from '../../redux/action/contacts'\nimport {asyncAddContact} from '../../redux/action/actionContacts'\nimport {useDispatch, useSelector} from 'react-redux'\n\n\n\nconst AddContactForm = () => {\n\n  const initialState = {name: \"\", number: \"\"}\n\n  const [form, setForm] = useState(initialState) \n  const dispatch = useDispatch()\n  const contacts = useSelector((state) => state.contacts)\n\n  console.log(contacts)\n\n  const inputValue = (e) => {\n    const { name, value } = e.target;\n    setForm({...form, [name]: value });\n  };\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    const isExist = contacts.find(\n      (el) => el.name === form.name\n    );\n    if (form.name === \"\" || form.number === \"\") {\n      toast.configure()\n      // alert(\"Fill the form\");\n      toast.error(\"Fill the form\")\n      return;\n    }\n    if (isExist) {\n      toast.configure()\n      toast.error(`${form.name} is already in contact`)\n      // alert(`${form.name} is already in contact`);\n      setForm(initialState)\n      return;\n    } else {\n      dispatch(asyncAddContact(form))\n      setForm(initialState)\n    }\n  };\n\n  return (\n    <form onSubmit={formSubmit} className=\"block\">\n      <p className=\"label\">Name</p>\n      <input type=\"text\" onChange={inputValue} value={form.name} name=\"name\"></input>\n      <p className=\"label\">Number input</p>\n      <input\n        type=\"text\"\n        onChange={inputValue}\n        value={form.number}\n        name=\"number\"\n      />\n      <button type=\"submit\">Add phone</button>\n    </form>\n  ); \n  AddContactForm.propTypes = {\n    formSubmit: PropTypes.func.isRequired,\n    inputValue: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n  };\n};\n\nexport default AddContactForm;\n","import {ADD_CONTACT_REQUEST_ERROR, DELETE_CONTACT_REQUEST_ERROR, ERROR_RESET, LOAD_ERROR} from '../type/index'\r\n\r\nexport const contactError = () => ({\r\n    type: ADD_CONTACT_REQUEST_ERROR,\r\n})\r\n\r\nexport const deleteError = () => ({\r\n    type: DELETE_CONTACT_REQUEST_ERROR,\r\n})\r\n\r\nexport const errorReset = () => ({\r\n    type: ERROR_RESET,\r\n})\r\n\r\nexport const loadError =() => ({\r\n    type: LOAD_ERROR\r\n})","import React, {useEffect} from \"react\";\nimport PropTypes from 'prop-types'\nimport {CSSTransition, TransitionGroup } from 'react-transition-group'\nimport {connect, useSelector, useDispatch} from 'react-redux'\nimport {deleteContact} from '../../redux/action/contacts'\nimport {asyncDeleteContact, asyncLoadStorage} from '../../redux/action/actionContacts'\n\nconst ContactList = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(asyncLoadStorage())\n      }, [])\n\n  const contacts = useSelector((state) => state.contacts)\n  const filter = useSelector((state) => state.filterState)\n \n \n  const filteredArr = () => {\n    return contacts.filter(el => el.name.toLowerCase().includes(filter))\n  }\n\n\n\n\n\nconsole.log(filter)\nconsole.log(contacts)\n \n\n  return (\n    <>\n      {contacts.length > 2 ? (\n        <TransitionGroup component=\"ul\" className=\"list\">\n          {filteredArr().map((el) => (\n            <CSSTransition classNames=\"listItem\" timeout={300} key={el.id}>\n            <li  className='listItem'>\n            <div className=\"listName\">{el.name}</div> <div className=\"listName\">{el.number}</div> \n              <button onClick={() => dispatch(asyncDeleteContact(el.id))} className=\"deletBtn\">X</button>\n            </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      ) : (\n        <TransitionGroup component=\"ul\" className=\"list\" >\n          {filteredArr().map((el) => (\n            <CSSTransition classNames=\"listItem\" timeout={300}>\n            <li key={el.id} className='listItem'>\n              <div className=\"listName\">{el.name}</div> <div className=\"listName\">{el.number}</div> \n              <button onClick={() => dispatch(deleteContact(el.id))} className=\"deletBtn\">X</button>\n            </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      )}\n    </>\n  );\n  ContactList.propTypes ={ \n    contacts: PropTypes.arrayOf({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    filteredNames: PropTypes.func, \n    deleteItem: PropTypes.func,\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts\n})\n\n\n\nexport default connect(mapStateToProps) (ContactList);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {useDispatch} from 'react-redux'\nimport {filter} from '../../redux/action/contacts'\n\nconst Filter = () => {\n\n  // const [filter, setFilter] = useState('')\n  const dispatch = useDispatch()\n\n  const inputValue = (e) => {\n    // const { name, value } = e.target;\n    // setFilter({...filter, [name]: value });\n    dispatch(filter(e.target.value))\n  };\n\n  return (\n    <div className=\"block\">\n      <p className=\"label\">Find contacts by name</p>\n      <input\n        type=\"text\"\n        onInput={inputValue}\n        name=\"filter\"/>\n    </div>\n  ); \n  Filter.propTypes ={\n    inputValue:PropTypes.func.isRequired,\n\n  }\n\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport AddContactForm from \"./Components/AddContactForm/AddContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n// import storage from \"./utils/storage\";\nimport {connect} from 'react-redux'\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    book: false,\n  };\n\n \n\n  render() {\n\n    return (\n      <div className=\"overlay\">\n        <CSSTransition\n          in={this.state.book}\n          classNames=\"phonebook\"\n          timeout={{ enter: 500 }}\n        >\n          <h1 className=\"phonebook\">Phonebook</h1>\n        </CSSTransition>\n\n        <AddContactForm/>\n        <h2 className=\"phonebook\">Contact List</h2>\n        <Filter  />\n        <ContactList\n          \n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts\n})\n\n\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport globalStore from './redux/store/index'\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={globalStore}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}